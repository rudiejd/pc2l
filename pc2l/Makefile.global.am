#---------------------------------------------------------------------
#  ____ 
# |  _ \    This file is part of  PC2L:  A Parallel & Cloud Computing 
# | |_) |   Library <http://www.pc2lab.cec.miamioh.edu/pc2l>. PC2L is 
# |  __/    free software: you can  redistribute it and/or  modify it
# |_|       under the terms of the GNU  General Public License  (GPL)
#           as published  by  the   Free  Software Foundation, either
#           version 3 (GPL v3), or  (at your option) a later version.
#    
#   ____    PC2L  is distributed in the hope that it will  be useful,
#  / ___|   but   WITHOUT  ANY  WARRANTY;  without  even  the IMPLIED
# | |       WARRANTY of  MERCHANTABILITY  or FITNESS FOR A PARTICULAR
# | |___    PURPOSE.
#  \____| 
#            Miami University and  the PC2Lab development team make no
#            representations  or  warranties  about the suitability of
#  ____      the software,  either  express  or implied, including but
# |___ \     not limited to the implied warranties of merchantability,
#   __) |    fitness  for a  particular  purpose, or non-infringement.
#  / __/     Miami  University and  its affiliates shall not be liable
# |_____|    for any damages  suffered by the  licensee as a result of
#            using, modifying,  or distributing  this software  or its
#            derivatives.
#
#  _         By using or  copying  this  Software,  Licensee  agree to
# | |        abide  by the intellectual  property laws,  and all other
# | |        applicable  laws of  the U.S.,  and the terms of the  GNU
# | |___     General  Public  License  (version 3).  You  should  have
# |_____|    received a  copy of the  GNU General Public License along
#            with MUSE.  If not,  you may  download  copies  of GPL V3
#            from <http://www.gnu.org/licenses/>.
#
# --------------------------------------------------------------------
# Authors:   Dhananjai M. Rao          raodm@miamioh.edu
#---------------------------------------------------------------------

#
# This file is a global make file that is included by all makefiles in
# the build hierarchy.  Setting flags here impacts the entire project
# build.
#

GLOBALCPPFLAGS  = $(WALL) $(WEXTRA) $(PIPE) $(INFORM_WARN) -g $(OPT_O3)
# Flag bleow enables printing rollback stats to files.
# GLOBALCPPFLAGS += -fno-builtin-malloc -fno-builtin-calloc -fno-builtin-realloc -fno-builtin-free
GLOBALCPPFLAGS += $(ICC_NO_WARN_SOME)
GLOBALCPPFLAGS += $(USING_ICC) $(USING_GCC) -DREGULAR_COMPILE
GLOBALCXXFLAGS  = $(CPP11) $(CPP0X)

# For profiling the frame pointers are important for short methods.
GLOBALCPPFLAGS += -fno-omit-frame-pointer

# The following compiler flag enables additional sanity checks that
# may slow down simulations.  So for full performance and performance
# comparisons ensure the following flag is disabled.
GLOBALCPPFLAGS += $(DEV_ASSERT)

# Override configure settings to enable developer assertions used for
# validating/sanity-checks throughout the code base
# GLOBALCPPFLAGS += -DDEVELOPER_ASSERTIONS

# The following flag is typically enabled in configure. The following
# compiler flag causes simulation to write verbose output to Log*.txt
# file(s).  It is primarily designed to be used with single-threaded
# MPI simulations.
# GLOBALCPPFLAGS += -DDEBUG_OUTPUT

# Additional include path for OpenCL headers
GLOBALCPPFLAGS += $(OPEN_CL_PATH)

AM_CXXFLAGS = $(GLOBALCXXFLAGS)
AM_CPPFLAGS = $(GLOBALCPPFLAGS) \
	-I$(top_builddir)/include
AM_CFLAGS   = -std=c99

# Setup the global LD flags to include OpenCL library if available
AM_LDFLAGS   = $(OPEN_CL_LDPATH)

# Flag to enable address sanitization as needed. Uncomment-both lines
# below if you would like to use address sanitizer.  Unfortunately,
# OpenMPI leaks some memory and that may cause spurious errors.
# GLOBALCPPFLAGS += -fsanitize=address
# AM_LDFLAGS += -fsanitize=address


# end of Makefile.global.am
